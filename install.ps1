# TradeTron Token Generator - One-Click Installation Script
# Windows PowerShell Script
# Run this script by right-clicking and selecting "Run with PowerShell" or run: .\install.ps1

Write-Host "================================================" -ForegroundColor Cyan
Write-Host "TradeTron Token Generator Installation" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""

# Check if Node.js is installed
Write-Host "Step 1: Checking Node.js installation..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "✓ Node.js found: $nodeVersion" -ForegroundColor Green
    
    # Check Node.js version (should be 20+)
    $majorVersion = [int]($nodeVersion -replace 'v(\d+)\..*', '$1')
    if ($majorVersion -lt 20) {
        Write-Host "⚠ Warning: Node.js version 20+ recommended. Current version: $nodeVersion" -ForegroundColor Yellow
        Write-Host "Continue anyway? (Y/N): " -ForegroundColor Yellow -NoNewline
        $continue = Read-Host
        if ($continue -ne "Y" -and $continue -ne "y") {
            Write-Host "Installation cancelled." -ForegroundColor Red
            exit 1
        }
    }
} catch {
    Write-Host "✗ Node.js is not installed!" -ForegroundColor Red
    Write-Host "Please install Node.js 20+ from https://nodejs.org/" -ForegroundColor Red
    Write-Host "Then run this script again." -ForegroundColor Red
    exit 1
}

# Check npm
Write-Host ""
Write-Host "Step 2: Checking npm..." -ForegroundColor Yellow
try {
    $npmVersion = npm --version
    Write-Host "✓ npm found: v$npmVersion" -ForegroundColor Green
} catch {
    Write-Host "✗ npm is not found!" -ForegroundColor Red
    exit 1
}

# Install dependencies
Write-Host ""
Write-Host "Step 3: Installing npm dependencies..." -ForegroundColor Yellow
Write-Host "This may take 2-5 minutes..." -ForegroundColor Gray
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Host "✗ Failed to install dependencies!" -ForegroundColor Red
    Write-Host "Trying with --legacy-peer-deps..." -ForegroundColor Yellow
    npm install --legacy-peer-deps
    if ($LASTEXITCODE -ne 0) {
        Write-Host "✗ Installation failed!" -ForegroundColor Red
        exit 1
    }
}
Write-Host "✓ Dependencies installed successfully" -ForegroundColor Green

# Install Playwright browser
Write-Host ""
Write-Host "Step 4: Installing Playwright Chromium browser..." -ForegroundColor Yellow
Write-Host "This may take 1-3 minutes..." -ForegroundColor Gray
npm run playwright:install
if ($LASTEXITCODE -ne 0) {
    Write-Host "✗ Failed to install Playwright browser!" -ForegroundColor Red
    exit 1
}
Write-Host "✓ Playwright browser installed successfully" -ForegroundColor Green

# Create .env.local file
Write-Host ""
Write-Host "Step 5: Setting up environment configuration..." -ForegroundColor Yellow

if (Test-Path ".env.local") {
    Write-Host "⚠ .env.local already exists" -ForegroundColor Yellow
    Write-Host "Do you want to overwrite it? (Y/N): " -ForegroundColor Yellow -NoNewline
    $overwrite = Read-Host
    if ($overwrite -ne "Y" -and $overwrite -ne "y") {
        Write-Host "Keeping existing .env.local file" -ForegroundColor Gray
    } else {
        Remove-Item ".env.local"
    }
}

if (-not (Test-Path ".env.local")) {
    Write-Host "Generating encryption key..." -ForegroundColor Gray
    $encryptionKey = node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
    
    Write-Host ""
    Write-Host "Default configuration:" -ForegroundColor Cyan
    Write-Host "- Encryption Key: Auto-generated (secure random)" -ForegroundColor Gray
    Write-Host "- Max Concurrency: 4" -ForegroundColor Gray
    Write-Host "- Headless Mode: true" -ForegroundColor Gray
    Write-Host ""
    Write-Host "Enter custom encryption key (or press Enter to use auto-generated): " -ForegroundColor Yellow -NoNewline
    $customKey = Read-Host
    
    if ($customKey -and $customKey.Length -ge 32) {
        $encryptionKey = $customKey
        Write-Host "Using custom encryption key" -ForegroundColor Green
    } elseif ($customKey -and $customKey.Length -lt 32) {
        Write-Host "⚠ Key must be at least 32 characters. Using auto-generated key." -ForegroundColor Yellow
    } else {
        Write-Host "Using auto-generated encryption key" -ForegroundColor Green
    }
    
    $envContent = @"
# Environment Variables Configuration
# Generated by installation script

# Required: Encryption key (minimum 32 characters)
ENCRYPTION_KEY=$encryptionKey

# Optional: Maximum concurrent jobs (default: 4)
MAX_CONCURRENCY=4

# Optional: Run browser in headless mode (default: true)
HEADLESS=true

# Optional: Custom Chromium executable path
CHROMIUM_EXECUTABLE_PATH=
"@
    
    $envContent | Out-File -FilePath ".env.local" -Encoding UTF8
    Write-Host "✓ .env.local file created successfully" -ForegroundColor Green
    Write-Host "⚠ IMPORTANT: Keep your ENCRYPTION_KEY secure! It encrypts all passwords." -ForegroundColor Yellow
}

# Verify installation
Write-Host ""
Write-Host "Step 6: Verifying installation..." -ForegroundColor Yellow
Write-Host "Building application..." -ForegroundColor Gray
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "⚠ Build completed with warnings (this may be normal)" -ForegroundColor Yellow
} else {
    Write-Host "✓ Build successful" -ForegroundColor Green
}

# Success message
Write-Host ""
Write-Host "================================================" -ForegroundColor Green
Write-Host "Installation Completed Successfully!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
Write-Host ""
Write-Host "Next steps:" -ForegroundColor Cyan
Write-Host "1. Start the application:" -ForegroundColor White
Write-Host "   npm run dev" -ForegroundColor Gray
Write-Host ""
Write-Host "2. Open your browser and visit:" -ForegroundColor White
Write-Host "   http://localhost:3000" -ForegroundColor Gray
Write-Host ""
Write-Host "3. Add users via the 'Add User' page" -ForegroundColor White
Write-Host ""
Write-Host "Would you like to start the application now? (Y/N): " -ForegroundColor Yellow -NoNewline
$startNow = Read-Host

if ($startNow -eq "Y" -or $startNow -eq "y") {
    Write-Host ""
    Write-Host "Starting application..." -ForegroundColor Green
    Write-Host "The application will be available at http://localhost:3000" -ForegroundColor Cyan
    Write-Host "Press Ctrl+C to stop the server" -ForegroundColor Gray
    Write-Host ""
    npm run dev
} else {
    Write-Host ""
    Write-Host "Installation complete! Run 'npm run dev' when ready to start." -ForegroundColor Green
}

