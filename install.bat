@echo off
REM TradeTron Token Generator - One-Click Installation Script
REM Windows Batch Script
REM Double-click this file or run: install.bat

echo ================================================
echo TradeTron Token Generator Installation
echo ================================================
echo.

REM Check if Node.js is installed
echo Step 1: Checking Node.js installation...
where node >nul 2>&1
if %ERRORLEVEL% NEQ 0 (
    echo ✗ Node.js is not installed!
    echo Please install Node.js 20+ from https://nodejs.org/
    echo Then run this script again.
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
echo ✓ Node.js found: %NODE_VERSION%

REM Check npm
echo.
echo Step 2: Checking npm...
where npm >nul 2>&1
if %ERRORLEVEL% NEQ 0 (
    echo ✗ npm is not found!
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
echo ✓ npm found: v%NPM_VERSION%

REM Install dependencies
echo.
echo Step 3: Installing npm dependencies...
echo This may take 2-5 minutes...
call npm install
if %ERRORLEVEL% NEQ 0 (
    echo ✗ Failed to install dependencies!
    echo Trying with --legacy-peer-deps...
    call npm install --legacy-peer-deps
    if %ERRORLEVEL% NEQ 0 (
        echo ✗ Installation failed!
        pause
        exit /b 1
    )
)
echo ✓ Dependencies installed successfully

REM Install Playwright browser
echo.
echo Step 4: Installing Playwright Chromium browser...
echo This may take 1-3 minutes...
call npm run playwright:install
if %ERRORLEVEL% NEQ 0 (
    echo ✗ Failed to install Playwright browser!
    pause
    exit /b 1
)
echo ✓ Playwright browser installed successfully

REM Create .env.local file
echo.
echo Step 5: Setting up environment configuration...

if exist ".env.local" (
    echo ⚠ .env.local already exists
    set /p OVERWRITE="Do you want to overwrite it? (Y/N): "
    if /i "%OVERWRITE%"=="Y" (
        del .env.local
    ) else (
        echo Keeping existing .env.local file
        goto :skip_env
    )
)

echo Generating encryption key...
for /f "tokens=*" %%i in ('node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"') do set ENCRYPTION_KEY=%%i

echo.
echo Default configuration:
echo - Encryption Key: Auto-generated (secure random)
echo - Max Concurrency: 4
echo - Headless Mode: true
echo.
set /p CUSTOM_KEY="Enter custom encryption key (or press Enter to use auto-generated): "

if not "%CUSTOM_KEY%"=="" (
    set ENCRYPTION_KEY=%CUSTOM_KEY%
    echo Using custom encryption key
) else (
    echo Using auto-generated encryption key
)

(
echo # Environment Variables Configuration
echo # Generated by installation script
echo.
echo # Required: Encryption key (minimum 32 characters)
echo ENCRYPTION_KEY=%ENCRYPTION_KEY%
echo.
echo # Optional: Maximum concurrent jobs (default: 4)
echo MAX_CONCURRENCY=4
echo.
echo # Optional: Run browser in headless mode (default: true)
echo HEADLESS=true
echo.
echo # Optional: Custom Chromium executable path
echo CHROMIUM_EXECUTABLE_PATH=
) > .env.local

echo ✓ .env.local file created successfully
echo ⚠ IMPORTANT: Keep your ENCRYPTION_KEY secure! It encrypts all passwords.

:skip_env

REM Verify installation
echo.
echo Step 6: Verifying installation...
echo Building application...
call npm run build
if %ERRORLEVEL% NEQ 0 (
    echo ⚠ Build completed with warnings (this may be normal)
) else (
    echo ✓ Build successful
)

REM Success message
echo.
echo ================================================
echo Installation Completed Successfully!
echo ================================================
echo.
echo Next steps:
echo 1. Start the application:
echo    npm run dev
echo.
echo 2. Open your browser and visit:
echo    http://localhost:3000
echo.
echo 3. Add users via the 'Add User' page
echo.
set /p START_NOW="Would you like to start the application now? (Y/N): "

if /i "%START_NOW%"=="Y" (
    echo.
    echo Starting application...
    echo The application will be available at http://localhost:3000
    echo Press Ctrl+C to stop the server
    echo.
    call npm run dev
) else (
    echo.
    echo Installation complete! Run 'npm run dev' when ready to start.
    pause
)

